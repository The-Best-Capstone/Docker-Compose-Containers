version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://192.168.122.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "analog:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  timescaledb:
    image: timescale/timescaledb:latest-pg11
    container_name: timescale
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./timescaledb/db:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - APP_DB_USER=postgres
      - APP_DB_PASS=testing
      - APP_DB_NAME=sensorsdb

  grafana:
    container_name: grafana
    build:
      context: ./grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"

volumes:
  db-data:
    driver: local
  grafana_data:
    driver: local
